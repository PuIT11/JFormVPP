/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Form;

import Data.DBConnection;
import Data.MatHang;
import Data.UserAccount;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kimdo
 */
public class FMatHang extends javax.swing.JFrame {
    public FMatHang(){
        initComponents();
        setLocationRelativeTo(null);
        
        try{          
            Connection connection = DBConnection.getConnection();
            FillMH(connection);
            connection.close();
        }catch (SQLException ex) {
            Logger.getLogger(FMatHang.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Lỗi kết nối đến cơ sở dữ liệu.");
        }   
    }
    
    public void FillMH(Connection connection){
        DefaultTableModel model = (DefaultTableModel) tblMatHang.getModel();
        model.setRowCount(0);
        
        ArrayList<String> DSLoaiMH = new ArrayList<>();
        DSLoaiMH.add("");
        
        //MaLoaiToTenLoai = new HashMap<>();

        String sql = "SELECT * FROM MAT_HANG,LOAI_MAT_HANG";
        
        try (PreparedStatement preparedStatement = connection.prepareStatement(sql);
             ResultSet resultSet = preparedStatement.executeQuery()) {
            while (resultSet.next()) {
                String MaMH = resultSet.getString("MaMH");
                String TenMH = resultSet.getString("TenMH");
                int GiaBan = resultSet.getInt("GiaBan");
                String DVT = resultSet.getString("DVT");
                String MaLoai = resultSet.getString("MaLoai");
                String MoTa = resultSet.getString("MoTa");
                
                boolean VoHieuHoa = resultSet.getBoolean("VoHieuHoa");
                String TenLoai = resultSet.getString("TenLoai");
                DSLoaiMH.add(MaLoai);
                
                    Object[] rowData = {
                        MaMH,  
                        TenMH,  
                        GiaBan,  
                        DVT, 
                        MaLoai,
                        MoTa, 
                        VoHieuHoa  
                    };
                    model.addRow(rowData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(FMatHang.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultComboBoxModel<String> models = new DefaultComboBoxModel<>(DSLoaiMH.toArray(new String[0]));
        cbLoai.setModel(models);
    }
    
    public void reloadTable(Connection connection) {
        DefaultTableModel model = (DefaultTableModel) tblMatHang.getModel();
        model.setRowCount(0);
        FillMH(connection);
    }
    
    /**
     *

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMatHang = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cbLoai = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtMaMatHang = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMatHang = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDVT = new javax.swing.JTextField();
        cbVoHieuHoa = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        txtGia = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnCong = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        btThem = new javax.swing.JMenu();
        btXoa = new javax.swing.JMenu();
        btSua = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        btnDangXuat = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Danh sách mặt hàng");
        setBackground(new java.awt.Color(0, 102, 102));

        tblMatHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã mặt hàng", "Tên mặt hàng", "Giá", "DVT", "Mã loại", "Mô tả", "Vô hiệu hóa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblMatHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMatHangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMatHang);

        jLabel1.setText("Loại mặt hàng");

        jLabel2.setText("Mã mặt hàng");

        jLabel3.setText("Giá");

        txtMatHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatHangActionPerformed(evt);
            }
        });

        jLabel4.setText("Mặt hàng");

        jLabel5.setText("DVT");

        cbVoHieuHoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbVoHieuHoaActionPerformed(evt);
            }
        });

        jLabel6.setText("Mô tả");

        txtMoTa.setColumns(20);
        txtMoTa.setRows(5);
        jScrollPane2.setViewportView(txtMoTa);

        jLabel8.setText("Vô hiệu hóa");

        btnCong.setText("+");
        btnCong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCongActionPerformed(evt);
            }
        });

        btThem.setText("Thêm");
        btThem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btThem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btThemMouseClicked(evt);
            }
        });
        jMenuBar1.add(btThem);

        btXoa.setText("Xóa");
        btXoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btXoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btXoaMouseClicked(evt);
            }
        });
        jMenuBar1.add(btXoa);

        btSua.setText("Sửa");
        btSua.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btSua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btSuaMouseClicked(evt);
            }
        });
        jMenuBar1.add(btSua);

        jMenu5.setText("Bỏ qua");
        jMenu5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenu5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BoQuaClick(evt);
            }
        });
        jMenu5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu5ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu5);

        btnDangXuat.setText("Đăng xuất");
        btnDangXuat.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDangXuat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDangXuatMouseClicked(evt);
            }
        });
        jMenuBar1.add(btnDangXuat);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbLoai, 0, 134, Short.MAX_VALUE)
                    .addComponent(txtMaMatHang, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addComponent(txtGia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCong)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDVT, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                            .addComponent(txtMatHang))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbVoHieuHoa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cbLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMatHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(btnCong))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtMaMatHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDVT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbVoHieuHoa)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMatHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatHangActionPerformed

    private void tblMatHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMatHangMouseClicked
        int selectRow = tblMatHang.getSelectedRow();
        
        if(selectRow >= 0 ){
            String MaMH = (String) tblMatHang.getValueAt(selectRow, 0);
            String TenMH = (String) tblMatHang.getValueAt(selectRow, 1);
            int Gia = (int) tblMatHang.getValueAt(selectRow, 2);
            String DVT = (String) tblMatHang.getValueAt(selectRow, 3);
            String MaLoai = (String) tblMatHang.getValueAt(selectRow, 4);
            //String TenLoai = MaLoaiToTenLoai.get(MaLoai);
            String Mota = (String) tblMatHang.getValueAt(selectRow, 5);
            boolean VoHieuHoa = (boolean) tblMatHang.getValueAt(selectRow, 6);
            
            txtMaMatHang.setText(MaMH);
            txtGia.setText(String.valueOf(Gia));
            txtMatHang.setText(TenMH);
            txtDVT.setText(DVT);
            txtMoTa.setText(Mota);
            cbVoHieuHoa.setSelected(VoHieuHoa);
            
            cbLoai.setSelectedItem(MaLoai);
            //btn.setText(TenLoai);
        }
    }//GEN-LAST:event_tblMatHangMouseClicked

    private void btThemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btThemMouseClicked
        Connection connection = DBConnection.getConnection();
        int selectRow = tblMatHang.getSelectedRow();

        String MaMH = txtMaMatHang.getText();
        String TenMH = txtMatHang.getText();
        String GiaBanText = txtGia.getText();
        String DVT = txtDVT.getText();
        String MaLoai = cbLoai.getSelectedItem().toString();
        String MoTa = txtMoTa.getText();
        boolean VoHieuHoa = cbVoHieuHoa.isSelected();

        if (selectRow >= 0){
            int option = JOptionPane.showConfirmDialog(this, "Bạn có muốn thêm mặt hàng không?");
            System.out.println("option: " + option);

            if (option == 0) {
                if (MaMH.isEmpty() || TenMH.isEmpty() || GiaBanText.isEmpty() || DVT.isEmpty() || MaLoai.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin vào các trường bắt buộc.");
                } else {
                    try {
                        int GiaBan = Integer.parseInt(GiaBanText);

                        String sqlInsert = "INSERT INTO MAT_HANG (MaMH, TenMH, GiaBan, DVT, MaLoai, MoTa, VoHieuHoa) VALUES (?, ?, ?, ?, ?, ?, ?)";
                        try (PreparedStatement preparedStatement = connection.prepareStatement(sqlInsert)) {
                            preparedStatement.setString(1, MaMH);
                            preparedStatement.setString(2, TenMH);
                            preparedStatement.setInt(3, GiaBan);
                            preparedStatement.setString(4, DVT);
                            preparedStatement.setString(5, MaLoai);
                            preparedStatement.setString(6, MoTa);
                            preparedStatement.setBoolean(7, VoHieuHoa);

                            int rowsInserted = preparedStatement.executeUpdate();
                            if (rowsInserted > 0) {
                                reloadTable(connection);

                                txtMaMatHang.setText("");
                                txtMatHang.setText("");
                                txtGia.setText("");
                                txtDVT.setText("");
                                cbLoai.setSelectedIndex(0); 
                                txtMoTa.setText("");
                                cbVoHieuHoa.setSelected(false);
                            }
                        } catch (SQLException ex) {
                            Logger.getLogger(FMatHang.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(this, "Giá bán phải là một số nguyên.");
                    }
                }
            }
        }
    }//GEN-LAST:event_btThemMouseClicked

    private void btSuaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSuaMouseClicked
        Connection connection = DBConnection.getConnection();   
        int selectRow = tblMatHang.getSelectedRow();
        
        String MaMH = txtMaMatHang.getText();
        String TenMH = txtMatHang.getText();
        int GiaBan = Integer.parseInt(txtGia.getText());
        String DVT = txtDVT.getText();
        String MaLoai = cbLoai.getSelectedItem().toString();
        String MoTa = txtMoTa.getText();
        boolean VoHieuHoa = cbVoHieuHoa.isSelected();
        
        if (selectRow >=0){
            int option = JOptionPane.showConfirmDialog(this, "Bạn muốn sửa thông tin không ?");
            System.out.println("option : " + option);
            
            String sqlUpdate = "UPDATE MAT_HANG SET TenMH = ?, GiaBan = ?, DVT = ?, MaLoai = ?, MoTa = ?, VoHieuHoa = ? WHERE MaMH = ?";
            
            if(option == 0){
                try (PreparedStatement preparedStatement = connection.prepareStatement(sqlUpdate)) {
                preparedStatement.setString(1, TenMH);
                preparedStatement.setInt(2, GiaBan);
                preparedStatement.setString(3, DVT);
                preparedStatement.setString(4, MaLoai);
                preparedStatement.setString(5, MoTa);
                preparedStatement.setBoolean(6, VoHieuHoa);
                preparedStatement.setString(7, MaMH);

                int rowsUpdated = preparedStatement.executeUpdate();
                
                
                if (rowsUpdated > 0) {
                    reloadTable(connection);
                }
                } catch (SQLException ex) {
                    Logger.getLogger(FMatHang.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btSuaMouseClicked

    private void btXoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btXoaMouseClicked
        int selectRow = tblMatHang.getSelectedRow();
        if (selectRow >= 0) {
            String MaMH = (String) tblMatHang.getValueAt(selectRow, 0);
            Connection connection = DBConnection.getConnection();
            String sqlDelete = "DELETE FROM MAT_HANG WHERE MAMH = ?";
            int option = JOptionPane.showConfirmDialog(this, "Muốn xóa không ?");
            System.out.println("option : " + option);

            if(option == 0){
                try (PreparedStatement preparedStatement = connection.prepareStatement(sqlDelete)) {
                    preparedStatement.setString(1, MaMH);
                    int result = preparedStatement.executeUpdate();
                    if (result > 0) {
                        DefaultTableModel model = (DefaultTableModel) tblMatHang.getModel();
                        model.removeRow(selectRow);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(FMatHang.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            reloadTable(connection);
        }
    }//GEN-LAST:event_btXoaMouseClicked

    private void cbVoHieuHoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbVoHieuHoaActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbVoHieuHoaActionPerformed

    private void BoQuaClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BoQuaClick
        dispose();      
    }//GEN-LAST:event_BoQuaClick

    private void btnCongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCongActionPerformed
        // TODO add your handling code here:
        Connection connection = DBConnection.getConnection();   
        FLoaiMH frm = new  FLoaiMH();
        frm.setVisible(true);
        dispose();
        reloadTable(connection);
    }//GEN-LAST:event_btnCongActionPerformed

    private void btnDangXuatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDangXuatMouseClicked
        // TODO add your handling code here:
        FLogin frm = new  FLogin();
        frm.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnDangXuatMouseClicked

    private void jMenu5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu5ActionPerformed
        // TODO add your handling code here:
        FQuanLi fm = new FQuanLi();
        fm.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenu5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FMatHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FMatHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FMatHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FMatHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FMatHang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu btSua;
    private javax.swing.JMenu btThem;
    private javax.swing.JMenu btXoa;
    private javax.swing.JButton btnCong;
    private javax.swing.JMenu btnDangXuat;
    private javax.swing.JComboBox<String> cbLoai;
    private javax.swing.JCheckBox cbVoHieuHoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblMatHang;
    private javax.swing.JTextField txtDVT;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaMatHang;
    private javax.swing.JTextField txtMatHang;
    private javax.swing.JTextArea txtMoTa;
    // End of variables declaration//GEN-END:variables

}
